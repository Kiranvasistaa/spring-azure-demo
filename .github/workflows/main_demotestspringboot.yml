name: Build and deploy JAR app to Azure Function App - demolinfunapp

on:
  push:
    branches:
      - develop
    paths:
      - 'java-code/**'
      - 'pom.xml'
      - '.github/workflows/main_demotestspringboot.yml'

env:
  AZURE_FUNCTIONAPP_NAME: demofunlinapp # set this to your function app name on Azure
  JAVA_VERSION: '17' # set this to the java version to use

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Unit Testing
        run: mvn test
        
      - name: Build with Maven and Run SonarCloud analysis
        run: mvn clean verify sonar:sonar
        env:
          TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check target directory after build
        run: ls -R target

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: java-app
          path: 'target/*.jar'     

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: java-app

      - name: Find JAR file
        id: locate-jar
        run: echo "JAR_FILE=$(ls target/*.jar)" >> $GITHUB_ENV

      - name: Verify JAR file exists
        run: if [ ! -f "${{ env.JAR_FILE }}" ]; then echo "JAR file not found!"; exit 1; fi

      - name: Verify working directory
        run: ls -R

      - name: Run Azure Functions Action
        id: deploy-to-functionapp
        uses: Azure/functions-action@v1
        with:
          app-name: 'demolinfunapp'
          package: ${{ env.JAR_FILE }}
          respect-pom-xml: true
          publish-profile: ${{ secrets.PUBLISHPROFILE }}
